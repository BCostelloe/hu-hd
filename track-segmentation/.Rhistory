test$0
test
for i in test:
print(i)
for (i in test):
print(i)
data <- read.csv("/Users/blaircostelloe/Dropbox/Publications/HerdHoverVigilance/path-segmentation/ob015_segdata.csv")
df <-prepData(data = data, coordnames = c('lon', 'lat'))
df <-prepData(data = data, coordNames = c('lon', 'lat'))
df <-prepData(data = data, coordNames = c('lon', 'lat'), type = 'UTM')
plot(df)
state_names <- c('foraging', 'moving')
dist = list(step = "gamma", angle = "wrpcauchy")
Par0_m1 <- list(step=c(0.05,0.01,0.1,0.01),angle=c(0.7,0.3))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = stateNames)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
Par0_m1 <- list(step=c(0.05,0.01,-0.1,0.1,0.01,-0.1),angle=c(0.7,0.3))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
Par0_m1 <- list(step=c(0.05,0.01,0,0.1,0.01,0),angle=c(0.7,0.3))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
Par0_m1 <- list(step=c(0.05,0.01,0.1,0.1,0.01,0.1),angle=c(0.7,0.3))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
Par0_m1 <- list(step=c(0.02,0.01,0.1,0.1,0.01,0.1),angle=c(0.7,0.3))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
Par0_m1 <- list(step=c(0.02,0.01,0.1,0.1,0.01,0.1),angle=c(0.3,0.7))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
Par0_m1 <- list(step=c(0.01,0.005,0.01,0.1,0.01,0.1),angle=c(0.3,0.7))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
plot(m1)
hist(df$step)
max(df$step)
max(df$step, na.rm=T)
min(df$step, na.rm=T)
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
Par0_m1 <- list(step=c(0.05,0.05,0.0005,0.2,0.2,0.0005),angle=c(0.3,0.7))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
plot(m1)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
plot(m1)
data <- read.csv("/Users/blaircostelloe/Dropbox/Publications/HerdHoverVigilance/path-segmentation/ob074_segdata.csv")
df <-prepData(data = data, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('foraging', 'moving')
dist = list(step = "gamma", angle = "wrpcauchy")
hist(df$step)
hist(df$angle)
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
Par0_m1 <- list(step=c(0.1,0.1,0.02,0.2,0.2,0.02),angle=c(0.3,0.7))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
data <- read.csv("/Users/blaircostelloe/Dropbox/Publications/HerdHoverVigilance/path-segmentation/ob074_segdata.csv")
# drop T (frame) column
data <- data[,c(1,2,3)]
df <-prepData(data = data, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('foraging', 'moving')
dist = list(step = "gamma", angle = "wrpcauchy") # no idea if these distributions make sense
Par0_m1 <- list(step=c(0.1,0.1,0.02,0.2,0.2,0.02),angle=c(0.3,0.7))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
# start with just one animal for simplicity
data = data[data$ID == 0]
# start with just one animal for simplicity
data = data[data$ID == 0,]
data <- read.csv("/Users/blaircostelloe/Dropbox/Publications/HerdHoverVigilance/path-segmentation/ob074_segdata.csv")
# drop T (frame) column
data <- data[,c(1,2,3)]
# start with just one animal for simplicity
data <- data[data$ID == 0,]
data <- data[,c(2,3)]
df <-prepData(data = data, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('foraging', 'moving')
dist = list(step = "gamma", angle = "wrpcauchy") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
Par0_m1 <- list(step=c(0.1,0.1,0.02,0.2,0.2,0.02),angle=c(0.3,0.7))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
plot(m1)
dist = list(step = "weibull", angle = "wrpcauchy") # no idea if these distributions make sense
Par0_m1 <- list(step=c(1,0.5,0.02,1,1.5,0.02),angle=c(0.3,0.7))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
Par0_m1 <- list(step=c(0.1,0.09,0.02,0.2,0.18,0.02),angle=c(0.3,0.7))
dist = list(step = "gamma", angle = "wrpcauchy") # no idea if these distributions make sense
Par0_m1 <- list(step=c(0.1,0.09,0.02,0.2,0.18,0.02),angle=c(0.3,0.7))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
Par0_m1 <- list(step=c(0.1,0.05,0.02,0.2,0.1,0.02),angle=c(0.3,0.7))
library('momentuHMM')
data <- read.csv("/Users/blaircostelloe/Dropbox/Publications/HerdHoverVigilance/path-segmentation/ob074_segdata.csv")
# drop T (frame) column
data <- data[,c(1,2,3)]
# start with just one animal for simplicity
data <- data[data$ID == 0,]
data <- data[,c(2,3)]
df <-prepData(data = data, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('foraging', 'moving')
dist = list(step = "gamma", angle = "wrpcauchy") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
Par0_m1 <- list(step=c(0.1,0.05,0.02,0.2,0.1,0.02),angle=c(0.3,0.7))
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
plot(m1)
states <- viterbi(m1)
table(states)/nrow(df)
dist = list(step = "gamma", angle = "vm") # no idea if these distributions make sense
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 3) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(0.1,0.05,0.02,0.2,0.1,0.02),angle=anglePar0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
Par0_m1 <- list(step=c(0.1,0.05,0.02,0.2,0.1,0.02),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
Par0_m1 <- list(step=c(0.1,0.05,0.02,0.3,0.2,0.02),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
library('momentuHMM')
data <- read.csv("/Users/blaircostelloe/Dropbox/Publications/HerdHoverVigilance/path-segmentation/ob074_segdata.csv")
# drop T (frame) column
data <- data[,c(1,2,3)]
# start with just one animal for simplicity
data <- data[data$ID == 0,]
data <- data[,c(2,3)]
df <-prepData(data = data, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('foraging', 'moving')
installed.packages("swim")
install.packages("swim")
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 3) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(1,0.5,0.02,1,1,0.02),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
Par0_m1 <- list(step=c(0.5,0.5,0.02,1,1,0.02),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(0.5,0.5,0.02,1,1,0.02),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
Par0_m1 <- list(step=c(0.5,0.5,0.02,1,0.5,0.02),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
Par0_m1 <- list(step=c(1,1,0.5,1.5,0.02,0.02),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
library('momentuHMM')
data <- read.csv("/Users/blaircostelloe/Dropbox/Publications/HerdHoverVigilance/path-segmentation/ob074_segdata.csv")
# drop T (frame) column
data <- data[,c(1,2,3)]
df <-prepData(data = data, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(1,1,0.5,1.5,0.027,0.027),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
library('momentuHMM')
data <- read.csv("/Users/blaircostelloe/Dropbox/Publications/HerdHoverVigilance/path-segmentation/ob074_segdata.csv")
# drop T (frame) column
data <- data[,c(1,2,3)]
# start with just one animal for simplicity
data <- data[data$ID == 0,]
data <- data[,c(2,3)]
#sub-sample to 10Hz
df.new = data[seq(1, nrow(data), 3), ]
#sub-sample to 10Hz
data_10hz = data[seq(1, nrow(data), 3), ]
library('momentuHMM')
data <- read.csv("/Users/blaircostelloe/Dropbox/Publications/HerdHoverVigilance/path-segmentation/ob074_segdata.csv")
# drop T (frame) column
data <- data[,c(1,2,3)]
# start with just one animal for simplicity
data <- data[data$ID == 0,]
data <- data[,c(2,3)]
#sub-sample to 10Hz
data_10hz = data[seq(1, nrow(data), 3), ]
#sub-sample to 5Hz
data_5hz = data[seq(1, nrow(data), 6), ]
#sub-sample to 2Hz
data_2hz = data[seq(1, nrow(data), 15), ]
#sub-sample to 1Hz
data_1hz = data[seq(1, nrow(data), 30), ]
# try with 10 Hz
df <-prepData(data = data_10hz, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(1,1,0.5,1.5,0.01,0.01),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
View(data_10hz)
View(data)
View(df)
View(dist)
View(Par0_m1)
# try with 10 Hz
df <-prepData(data = data_1hz, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
Par0_m1 <- list(step=c(1,1,0.5,1.5,0.005,0.005),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
Par0_m1 <- list(step=c(1,1,0.8,1.5,0.005,0.005),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
# try with 10 Hz
df <-prepData(data = data_2hz, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(1,1,0.5,1.5,0.005,0.005),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
# try with 10 Hz
df <-prepData(data = data_5hz, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(1,1,0.5,1.5,0.007,0.007),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
# try with 10 Hz
df <-prepData(data = data_10hz, coordNames = c('lon', 'lat'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(1,1,0.5,1.5,0.01,0.01),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
library('momentuHMM')
library('momentuHMM')
cwd()
setwd("~/Documents/GitHub/zebra-vigilance/track-segmentation")
# read in data
tr015 <- read.csv('tracks-for-segmentation/ob015_smoothed.csv')
tr015
View(tr015)
# start with just one individual from ob015 to see which smoothing window is best
tr015_05 <- tr015[,c(5,8,9)]
View(tr015_05)
# start with just one individual from ob015 to see which smoothing window is best
tr015_05 <- tr015[,c(4,5,8,9)]
# start with just one individual from ob015 to see which smoothing window is best
tr015_05 <- tr015[,c(4,5,8,9)]
tr015_15 <- tr015[,c(4,5,10,11)]
tr015_31 <- tr015[,c(4,5,12,13)]
tr015_45 <- tr015[,c(4,5,14,15)]
tr015_61 <- tr015[,c(4,5,16,17)]
# try with 5-frame window
df <-prepData(data = tr015_05, coordNames = c('smooth05_x', 'smooth05_y'), type = 'UTM')
# try with 5-frame window
df <-prepData(data = tr015_05, coordNames = c('smooth_05_x', 'smooth_05_y'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm")
hist(df$step)
hist(df$step)
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
# try with 5-frame window
df <-prepData(data = tr015_05, coordNames = c('smooth_05_x', 'smooth_05_y'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(1,1,0.5,1.5,0.00,0.00),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
Par0_m1 <- list(step=c(1,1,0.5,1.5),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
# rename track ID column to ID
names(tr015)[names(tr015)=="trackID"] <- "ID"
# start with just one individual from ob015 to see which smoothing window is best
tr015_05 <- tr015[,c(4,5,8,9)]
tr015_15 <- tr015[,c(4,5,10,11)]
tr015_31 <- tr015[,c(4,5,12,13)]
tr015_45 <- tr015[,c(4,5,14,15)]
tr015_61 <- tr015[,c(4,5,16,17)]
# try with 5-frame window
df <-prepData(data = tr015_05, coordNames = c('smooth_05_x', 'smooth_05_y'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_m1 <- list(step=c(1,1,0.5,1.5),angle=angleCon0)
m1 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states <- viterbi(m1)
table(states)/nrow(df)
plot(m1)
states
tr015_15 <- tr015[,c(4,5,10,11)]
tr015_31 <- tr015[,c(4,5,12,13)]
tr015_45 <- tr015[,c(4,5,14,15)]
tr015_61 <- tr015[,c(4,5,16,17)]
# try with 5-frame window
df_05 <-prepData(data = tr015_05, coordNames = c('smooth_05_x', 'smooth_05_y'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_smooth05 <- list(step=c(1,1,0.5,1.5),angle=angleCon0)
smooth05 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states_05 <- viterbi(smooth05)
table(states)/nrow(df)
plot(smooth05)
# try with 15-frame window
df_15 <-prepData(data = tr015_15, coordNames = c('smooth_15_x', 'smooth_15_y'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df$step == 0)
length(whichzero)/nrow(df)
hist(df$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_smooth05 <- list(step=c(1,1,0.5,1.5),angle=angleCon0)
smooth05 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
Par0_smooth15 <- list(step=c(1,1,0.5,1.5),angle=angleCon0)
smooth15 <- fitHMM(data = df, nbStates = 2, dist = dist, Par0 = Par0_m1,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states_15 <- viterbi(smooth15)
# try with 15-frame window
df_15 <-prepData(data = tr015_15, coordNames = c('smooth_15_x', 'smooth_15_y'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df_15$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df_15$step == 0)
length(whichzero)/nrow(df_15)
hist(df_15$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_smooth15 <- list(step=c(1,1,0.5,1.5),angle=angleCon0)
smooth15 <- fitHMM(data = df_15, nbStates = 2, dist = dist, Par0 = Par0_smooth15,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states_15 <- viterbi(smooth15)
table(states_15)/nrow(df_15)
plot(smooth15)
# try with 31-frame window
df_31 <-prepData(data = tr015_31, coordNames = c('smooth_31_x', 'smooth_31_y'), type = 'UTM')
state_names <- c('stationary', 'traveling')
dist = list(step = "weibull", angle = "vm") # no idea if these distributions make sense
hist(df_31$step) # look at step length distribution to get idea for starting parameters
# calcualte proportion of steps that are 0 for zero-value parameter.
whichzero <- which(df_31$step == 0)
length(whichzero)/nrow(df_31)
hist(df_31$angle)
angleMean0 <- c(0, 0) # initial means (one for each state)
angleCon0 <- c(0.5, 8) # initial concentrations (one for each state)
anglePar0 <- c(angleMean0, angleCon0)
Par0_smooth31 <- list(step=c(1,1,0.5,1.5),angle=angleCon0)
smooth31 <- fitHMM(data = df_31, nbStates = 2, dist = dist, Par0 = Par0_smooth31,
estAngleMean = list(angle=FALSE), stateNames = state_names)
states_31 <- viterbi(smooth31)
table(states_31)/nrow(df_31)
plot(smooth31)
